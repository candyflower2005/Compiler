/* This Bison file was machine-generated by BNFC */
%{
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include "Absyn.H"
typedef struct yy_buffer_state *YY_BUFFER_STATE;
int yyparse(void);
int yylex(void);
YY_BUFFER_STATE Latteyy_scan_string(const char *str);
void Latteyy_delete_buffer(YY_BUFFER_STATE buf);
int Latteyy_mylinenumber;
int Latteinitialize_lexer(FILE * inp);
int Latteyywrap(void)
{
  return 1;
}
void Latteyyerror(const char *str)
{
  extern char *Latteyytext;
  fprintf(stderr,"error: line %d: %s at %s\n", 
    Latteyy_mylinenumber, str, Latteyytext);
}


namespace Latte
{
static Program* YY_RESULT_Program_ = 0;
Program* pProgram(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Program_;
  }
}
Program* pProgram(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Program_;
  }
}

static TopDef* YY_RESULT_TopDef_ = 0;
TopDef* pTopDef(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_TopDef_;
  }
}
TopDef* pTopDef(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_TopDef_;
  }
}

static ListTopDef* YY_RESULT_ListTopDef_ = 0;
ListTopDef* pListTopDef(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListTopDef_;
  }
}
ListTopDef* pListTopDef(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListTopDef_;
  }
}

static Arg* YY_RESULT_Arg_ = 0;
Arg* pArg(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Arg_;
  }
}
Arg* pArg(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Arg_;
  }
}

static ListArg* YY_RESULT_ListArg_ = 0;
ListArg* pListArg(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListArg_;
  }
}
ListArg* pListArg(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListArg_;
  }
}

static Block* YY_RESULT_Block_ = 0;
Block* pBlock(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Block_;
  }
}
Block* pBlock(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Block_;
  }
}

static ListStmt* YY_RESULT_ListStmt_ = 0;
ListStmt* pListStmt(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListStmt_;
  }
}
ListStmt* pListStmt(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListStmt_;
  }
}

static Stmt* YY_RESULT_Stmt_ = 0;
Stmt* pStmt(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Stmt_;
  }
}
Stmt* pStmt(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Stmt_;
  }
}

static Item* YY_RESULT_Item_ = 0;
Item* pItem(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Item_;
  }
}
Item* pItem(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Item_;
  }
}

static ListItem* YY_RESULT_ListItem_ = 0;
ListItem* pListItem(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListItem_;
  }
}
ListItem* pListItem(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListItem_;
  }
}

static Type* YY_RESULT_Type_ = 0;
Type* pType(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Type_;
  }
}
Type* pType(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Type_;
  }
}

static ListType* YY_RESULT_ListType_ = 0;
ListType* pListType(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListType_;
  }
}
ListType* pListType(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListType_;
  }
}

static Expr* YY_RESULT_Expr_ = 0;
Expr* pExpr(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Expr_;
  }
}
Expr* pExpr(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Expr_;
  }
}

static ListExpr* YY_RESULT_ListExpr_ = 0;
ListExpr* pListExpr(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListExpr_;
  }
}
ListExpr* pListExpr(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListExpr_;
  }
}

static AddOp* YY_RESULT_AddOp_ = 0;
AddOp* pAddOp(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_AddOp_;
  }
}
AddOp* pAddOp(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_AddOp_;
  }
}

static MulOp* YY_RESULT_MulOp_ = 0;
MulOp* pMulOp(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_MulOp_;
  }
}
MulOp* pMulOp(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_MulOp_;
  }
}

static RelOp* YY_RESULT_RelOp_ = 0;
RelOp* pRelOp(FILE *inp)
{
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_RelOp_;
  }
}
RelOp* pRelOp(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  Latteyy_mylinenumber = 1;
  Latteinitialize_lexer(0);
  buf = Latteyy_scan_string(str);
  result = yyparse();
  Latteyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_RelOp_;
  }
}


}
%}

%union
{
  int int_;
  char char_;
  double double_;
  char* string_;
  Latte::Program* program_;
  Latte::TopDef* topdef_;
  Latte::ListTopDef* listtopdef_;
  Latte::Arg* arg_;
  Latte::ListArg* listarg_;
  Latte::Block* block_;
  Latte::ListStmt* liststmt_;
  Latte::Stmt* stmt_;
  Latte::Item* item_;
  Latte::ListItem* listitem_;
  Latte::Type* type_;
  Latte::ListType* listtype_;
  Latte::Expr* expr_;
  Latte::ListExpr* listexpr_;
  Latte::AddOp* addop_;
  Latte::MulOp* mulop_;
  Latte::RelOp* relop_;
}
%define api.prefix {Latteyy}
%token _ERROR_
%token LATTE__SYMB_0    //   (
%token LATTE__SYMB_1    //   )
%token LATTE__SYMB_2    //   ,
%token LATTE__SYMB_3    //   {
%token LATTE__SYMB_4    //   }
%token LATTE__SYMB_5    //   ;
%token LATTE__SYMB_6    //   =
%token LATTE__SYMB_7    //   ++
%token LATTE__SYMB_8    //   --
%token LATTE__SYMB_9    //   -
%token LATTE__SYMB_10    //   !
%token LATTE__SYMB_11    //   &&
%token LATTE__SYMB_12    //   ||
%token LATTE__SYMB_13    //   +
%token LATTE__SYMB_14    //   *
%token LATTE__SYMB_15    //   /
%token LATTE__SYMB_16    //   %
%token LATTE__SYMB_17    //   <
%token LATTE__SYMB_18    //   <=
%token LATTE__SYMB_19    //   >
%token LATTE__SYMB_20    //   >=
%token LATTE__SYMB_21    //   ==
%token LATTE__SYMB_22    //   !=
%token LATTE__SYMB_23    //   boolean
%token LATTE__SYMB_24    //   else
%token LATTE__SYMB_25    //   false
%token LATTE__SYMB_26    //   if
%token LATTE__SYMB_27    //   int
%token LATTE__SYMB_28    //   return
%token LATTE__SYMB_29    //   string
%token LATTE__SYMB_30    //   true
%token LATTE__SYMB_31    //   void
%token LATTE__SYMB_32    //   while

%type <program_> Program
%type <topdef_> TopDef
%type <listtopdef_> ListTopDef
%type <arg_> Arg
%type <listarg_> ListArg
%type <block_> Block
%type <liststmt_> ListStmt
%type <stmt_> Stmt
%type <item_> Item
%type <listitem_> ListItem
%type <type_> Type
%type <listtype_> ListType
%type <expr_> Expr6
%type <expr_> Expr5
%type <expr_> Expr4
%type <expr_> Expr3
%type <expr_> Expr2
%type <expr_> Expr1
%type <expr_> Expr
%type <listexpr_> ListExpr
%type <addop_> AddOp
%type <mulop_> MulOp
%type <relop_> RelOp

%start Program
%token<string_> _STRING_
%token<int_> _INTEGER_
%token<string_> _IDENT_

%%
Program : ListTopDef {  std::reverse($1->begin(),$1->end()) ;$$ = new Latte::Prog($1); $$->line_number = Latteyy_mylinenumber; Latte::YY_RESULT_Program_= $$; } 
;
TopDef : Type _IDENT_ LATTE__SYMB_0 ListArg LATTE__SYMB_1 Block {  std::reverse($4->begin(),$4->end()) ;$$ = new Latte::FnDef($1, $2, $4, $6); $$->line_number = Latteyy_mylinenumber;  } 
;
ListTopDef : TopDef {  $$ = new Latte::ListTopDef() ; $$->push_back($1);  } 
  | TopDef ListTopDef {  $2->push_back($1) ; $$ = $2 ;  }
;
Arg : Type _IDENT_ {  $$ = new Latte::Ar($1, $2); $$->line_number = Latteyy_mylinenumber;  } 
;
ListArg : /* empty */ {  $$ = new Latte::ListArg();  } 
  | Arg {  $$ = new Latte::ListArg() ; $$->push_back($1);  }
  | Arg LATTE__SYMB_2 ListArg {  $3->push_back($1) ; $$ = $3 ;  }
;
Block : LATTE__SYMB_3 ListStmt LATTE__SYMB_4 {  $$ = new Latte::Blk($2); $$->line_number = Latteyy_mylinenumber;  } 
;
ListStmt : /* empty */ {  $$ = new Latte::ListStmt();  } 
  | ListStmt Stmt {  $1->push_back($2) ; $$ = $1 ;  }
;
Stmt : LATTE__SYMB_5 {  $$ = new Latte::Empty(); $$->line_number = Latteyy_mylinenumber;  } 
  | Block {  $$ = new Latte::BStmt($1); $$->line_number = Latteyy_mylinenumber;  }
  | Type ListItem LATTE__SYMB_5 {  std::reverse($2->begin(),$2->end()) ;$$ = new Latte::Decl($1, $2); $$->line_number = Latteyy_mylinenumber;  }
  | _IDENT_ LATTE__SYMB_6 Expr LATTE__SYMB_5 {  $$ = new Latte::Ass($1, $3); $$->line_number = Latteyy_mylinenumber;  }
  | _IDENT_ LATTE__SYMB_7 LATTE__SYMB_5 {  $$ = new Latte::Incr($1); $$->line_number = Latteyy_mylinenumber;  }
  | _IDENT_ LATTE__SYMB_8 LATTE__SYMB_5 {  $$ = new Latte::Decr($1); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_28 Expr LATTE__SYMB_5 {  $$ = new Latte::Ret($2); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_28 LATTE__SYMB_5 {  $$ = new Latte::VRet(); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_26 LATTE__SYMB_0 Expr LATTE__SYMB_1 Stmt {  $$ = new Latte::Cond($3, $5); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_26 LATTE__SYMB_0 Expr LATTE__SYMB_1 Stmt LATTE__SYMB_24 Stmt {  $$ = new Latte::CondElse($3, $5, $7); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_32 LATTE__SYMB_0 Expr LATTE__SYMB_1 Stmt {  $$ = new Latte::While($3, $5); $$->line_number = Latteyy_mylinenumber;  }
  | Expr LATTE__SYMB_5 {  $$ = new Latte::SExp($1); $$->line_number = Latteyy_mylinenumber;  }
;
Item : _IDENT_ {  $$ = new Latte::NoInit($1); $$->line_number = Latteyy_mylinenumber;  } 
  | _IDENT_ LATTE__SYMB_6 Expr {  $$ = new Latte::Init($1, $3); $$->line_number = Latteyy_mylinenumber;  }
;
ListItem : Item {  $$ = new Latte::ListItem() ; $$->push_back($1);  } 
  | Item LATTE__SYMB_2 ListItem {  $3->push_back($1) ; $$ = $3 ;  }
;
Type : LATTE__SYMB_27 {  $$ = new Latte::Int(); $$->line_number = Latteyy_mylinenumber;  } 
  | LATTE__SYMB_29 {  $$ = new Latte::Str(); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_23 {  $$ = new Latte::Bool(); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_31 {  $$ = new Latte::Void(); $$->line_number = Latteyy_mylinenumber;  }
;
ListType : /* empty */ {  $$ = new Latte::ListType();  } 
  | Type {  $$ = new Latte::ListType() ; $$->push_back($1);  }
  | Type LATTE__SYMB_2 ListType {  $3->push_back($1) ; $$ = $3 ;  }
;
Expr6 : _IDENT_ {  $$ = new Latte::EVar($1); $$->line_number = Latteyy_mylinenumber;  } 
  | _INTEGER_ {  $$ = new Latte::ELitInt($1); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_30 {  $$ = new Latte::ELitTrue(); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_25 {  $$ = new Latte::ELitFalse(); $$->line_number = Latteyy_mylinenumber;  }
  | _IDENT_ LATTE__SYMB_0 ListExpr LATTE__SYMB_1 {  std::reverse($3->begin(),$3->end()) ;$$ = new Latte::EApp($1, $3); $$->line_number = Latteyy_mylinenumber;  }
  | _STRING_ {  $$ = new Latte::EString($1); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_0 Expr LATTE__SYMB_1 {  $$ = $2;  }
;
Expr5 : LATTE__SYMB_9 Expr6 {  $$ = new Latte::Neg($2); $$->line_number = Latteyy_mylinenumber;  } 
  | LATTE__SYMB_10 Expr6 {  $$ = new Latte::Not($2); $$->line_number = Latteyy_mylinenumber;  }
  | Expr6 {  $$ = $1;  }
;
Expr4 : Expr4 MulOp Expr5 {  $$ = new Latte::EMul($1, $2, $3); $$->line_number = Latteyy_mylinenumber;  } 
  | Expr5 {  $$ = $1;  }
;
Expr3 : Expr3 AddOp Expr4 {  $$ = new Latte::EAdd($1, $2, $3); $$->line_number = Latteyy_mylinenumber;  } 
  | Expr4 {  $$ = $1;  }
;
Expr2 : Expr2 RelOp Expr3 {  $$ = new Latte::ERel($1, $2, $3); $$->line_number = Latteyy_mylinenumber;  } 
  | Expr3 {  $$ = $1;  }
;
Expr1 : Expr2 LATTE__SYMB_11 Expr1 {  $$ = new Latte::EAnd($1, $3); $$->line_number = Latteyy_mylinenumber;  } 
  | Expr2 {  $$ = $1;  }
;
Expr : Expr1 LATTE__SYMB_12 Expr {  $$ = new Latte::EOr($1, $3); $$->line_number = Latteyy_mylinenumber;  } 
  | Expr1 {  $$ = $1;  }
;
ListExpr : /* empty */ {  $$ = new Latte::ListExpr();  } 
  | Expr {  $$ = new Latte::ListExpr() ; $$->push_back($1);  }
  | Expr LATTE__SYMB_2 ListExpr {  $3->push_back($1) ; $$ = $3 ;  }
;
AddOp : LATTE__SYMB_13 {  $$ = new Latte::Plus(); $$->line_number = Latteyy_mylinenumber;  } 
  | LATTE__SYMB_9 {  $$ = new Latte::Minus(); $$->line_number = Latteyy_mylinenumber;  }
;
MulOp : LATTE__SYMB_14 {  $$ = new Latte::Times(); $$->line_number = Latteyy_mylinenumber;  } 
  | LATTE__SYMB_15 {  $$ = new Latte::Div(); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_16 {  $$ = new Latte::Mod(); $$->line_number = Latteyy_mylinenumber;  }
;
RelOp : LATTE__SYMB_17 {  $$ = new Latte::LTH(); $$->line_number = Latteyy_mylinenumber;  } 
  | LATTE__SYMB_18 {  $$ = new Latte::LE(); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_19 {  $$ = new Latte::GTH(); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_20 {  $$ = new Latte::GE(); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_21 {  $$ = new Latte::EQU(); $$->line_number = Latteyy_mylinenumber;  }
  | LATTE__SYMB_22 {  $$ = new Latte::NE(); $$->line_number = Latteyy_mylinenumber;  }
;

